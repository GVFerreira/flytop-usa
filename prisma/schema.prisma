generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id       String    @id @default(uuid())
  name     String
  email    String    @unique
  password String
  sessions Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_token")
}

model Destination {
  id                 String   @id @default(uuid())
  name               String
  subtitle           String
  price              Float
  regularPrice       Float    @map("regular_price")
  departureDates     String   @map("departure_dates")
  returnDates        String   @map("return_dates")
  departureCity      String   @map("departure_city")
  departureAirport   String   @map("departure_airport")
  destinationAirport String   @map("destination_airport")
  flightStopover     Boolean? @map("flight_stopver")
  airportStopover    String?  @map("airport_stopover")
  flightCompanyId    String   @map("flight_company")
  imagePath          String
  imageSlide         String   @db.Text
  updatedAt          DateTime @default(now()) @updatedAt @map("updated_at")
  createdAt          DateTime @default(now()) @map("created_at")

  company    Company               @relation(fields: [flightCompanyId], references: [id])
  categories DestinationCategory[]

  @@map("destinations")
}

model Category {
  id           String                @id @default(uuid())
  name         String
  slug         String                @unique
  destinations DestinationCategory[]

  @@map("categories")
}

model DestinationCategory {
  id            String      @id @default(uuid())
  destinationId String
  categoryId    String
  destination   Destination @relation(fields: [destinationId], references: [id])
  category      Category    @relation(fields: [categoryId], references: [id])

  @@map("destination_category")
}

model Company {
  id           String        @id @default(uuid())
  name         String
  slug         String        @unique
  imagePath    String
  destinations Destination[]

  @@map("companies")
}
